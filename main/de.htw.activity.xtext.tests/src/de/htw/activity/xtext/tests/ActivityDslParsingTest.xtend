/*
 * generated by Xtext 2.16.0
 */
package de.htw.activity.xtext.tests

import com.google.inject.Inject
import de.htw.activity.emf.activity.Activity
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.extensions.InjectionExtension
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.jupiter.api.Assertions
import org.junit.jupiter.api.Test
import org.junit.jupiter.api.^extension.ExtendWith
import org.junit.runner.RunWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.junit.Assert

//@ExtendWith(InjectionExtension)
//@InjectWith(ActivityDslInjectorProvider)
//class ActivityDslParsingTest {
//	@Inject
//	ParseHelper<Activity> parseHelper
//	
//	@Test
//	def void loadModel() {
//		val result = parseHelper.parse('''
//			Activity {
//			}
//		''')
//		Assertions.assertNotNull(result)
//		val errors = result.eResource.errors
//		Assertions.assertTrue(errors.isEmpty, '''Unexpected errors: лerrors.join(", ")╗''')
//	}
//}
@ExtendWith(InjectionExtension)
@InjectWith(ActivityDslInjectorProvider)
class ActivityDslParsingTest {
	@Inject extension ParseHelper<Activity> 
	@Inject extension ValidationTestHelper
	
//	@Test
//	def void testParsing(){
//		val Activity = '''
//			Activity {
//				nodes {
//					Action node1 {
//						Name Test
//					}
//				}
//			}
//		'''.parse
//		
//		val action = Activity.getNodes.get(0)
//		Assert.assertEquals("Test", action.name)
//	}
	
	@Test
	def void testCorrectParsing(){
		'''
ллл			Activity {
ллл				nodes {
ллл					Action node1 
ллл						Name Test
ллл					}
ллл				}
ллл			}
		'''.parse.assertNoErrors
	}
	
}